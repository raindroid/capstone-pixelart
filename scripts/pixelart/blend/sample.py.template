import os, sys, random, pprint
from pathlib import Path

# =============================================================================
# =========================== START Blender Script ============================
print(f"Start executing blender script from {__file__}")
pixelart_path = Path("__template_pixelart_path")
work_directory = str(pixelart_path / "work")

sys.path.append(os.path.dirname(__file__))
sys.path.append(str(pixelart_path / "scripts/pixelart/blend"))
import blender_operation as blender
import libpixelart as pixelart

# load parameters (replace remplates)
output_path = pixelart_path / "__template_output_path"
camera_param = __template_camera_param
objects_param = __template_objects_param
scene_param = __template_scene_param

# other settings
settings = __template_settings

# remove the default Cube in the blender
blender.remove_object("Cube")

# append scene model(s)
blender.import_blend_model(
    str(pixelart_path / "models/scenes" /
        scene_param['path']), "Collection", scene_param['collection']
)

# append all objects
objects_list = objects_param.keys()
for object_name in objects_list:
    object_param = objects_param[object_name]
    blender.import_blend_model(
        str(pixelart_path / "models/objects" /
            object_param['path']), "Collection", object_name
    )


# =============================================================================
# ==================== START rendering and generating labels ==================
render_path = output_path / "render"
render_path.mkdir(parents=True, exist_ok=True)

debug = False
result = pixelart.render_images(
    camera_param,
    scene_param, objects_param, limit=random.randint(*settings['image_count']),
    render_path=str(render_path), work_directory=work_directory, debug=debug)

blender.save_as_mainfile(directory=work_directory)

if 'error' in result:
    print(f"PixelArt script failed: {result['error']}")

# =============================================================================
# ======================= START rendering masks ===============================
blender.save_as_mainfile(directory=work_directory, filename="mask")
